// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Smoothie.Web.Controllers {
    public partial class AccountController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AccountController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FacebookLogin() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FacebookLogin);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult TwitterLogin() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.TwitterLogin);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AccountController Actions { get { return MVC.Account; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Account";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Account";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Login = "Login";
            public readonly string FacebookLogin = "FacebookLogin";
            public readonly string TwitterLogin = "TwitterLogin";
            public readonly string Signup = "Signup";
            public readonly string Logout = "Logout";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants {
            public const string Login = "Login";
            public const string FacebookLogin = "FacebookLogin";
            public const string TwitterLogin = "TwitterLogin";
            public const string Signup = "Signup";
            public const string Logout = "Logout";
        }


        static readonly ActionParamsClass_FacebookLogin s_params_FacebookLogin = new ActionParamsClass_FacebookLogin();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FacebookLogin FacebookLoginParams { get { return s_params_FacebookLogin; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FacebookLogin {
            public readonly string code = "code";
            public readonly string state = "state";
            public readonly string returnUrl = "returnUrl";
        }
        static readonly ActionParamsClass_TwitterLogin s_params_TwitterLogin = new ActionParamsClass_TwitterLogin();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TwitterLogin TwitterLoginParams { get { return s_params_TwitterLogin; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TwitterLogin {
            public readonly string oauth_token = "oauth_token";
            public readonly string oauth_verifier = "oauth_verifier";
            public readonly string returnUrl = "returnUrl";
            public readonly string denied = "denied";
        }
        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string ChangePassword = "~/Views/Account/ChangePassword.cshtml";
            public readonly string ChangePasswordSuccess = "~/Views/Account/ChangePasswordSuccess.cshtml";
            public readonly string Login = "~/Views/Account/Login.cshtml";
            public readonly string Signup = "~/Views/Account/Signup.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_AccountController: Smoothie.Web.Controllers.AccountController {
        public T4MVC_AccountController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Login() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Login);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Login(Smoothie.Domain.ViewModels.UserLoginViewModel user) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Login);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "user", user);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FacebookLogin(string code, string state, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FacebookLogin);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "code", code);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "state", state);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult TwitterLogin(string oauth_token, string oauth_verifier, string returnUrl, string denied) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.TwitterLogin);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oauth_token", oauth_token);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oauth_verifier", oauth_verifier);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "denied", denied);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Signup() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Signup);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Signup(Smoothie.Domain.ViewModels.UserRegisterViewModel user) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Signup);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "user", user);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Logout() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Logout);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
